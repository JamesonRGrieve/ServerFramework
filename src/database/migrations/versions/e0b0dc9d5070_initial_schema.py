"""initial schema

Revision ID: e0b0dc9d5070
Revises:
Create Date: 2025-06-14 15:44:17.867771

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e0b0dc9d5070"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "abilities",
        sa.Column(
            "extension_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Extension (table not found)",
        ),
        sa.Column("name", sa.String(), nullable=False, comment="The name"),
        sa.Column(
            "meta",
            sa.Boolean(),
            nullable=False,
            comment="Whether the ability is performed by the extension itself statically rather than a specific provider.",
        ),
        sa.Column(
            "friendly_name",
            sa.String(),
            nullable=True,
            comment="Human-readable name for the ability",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Ability table",
        info={"source_module": "logic.BLL_Extensions"},
    )
    op.create_table(
        "sessions",
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column(
            "session_key",
            sa.String(),
            nullable=False,
            comment="Unique session identifier used in JWT jti claim",
        ),
        sa.Column(
            "jwt_issued_at",
            sa.DateTime(),
            nullable=False,
            comment="When the JWT was issued",
        ),
        sa.Column(
            "refresh_token_hash",
            sa.String(),
            nullable=True,
            comment="Hash of refresh token if refresh mechanism is enabled",
        ),
        sa.Column(
            "device_type",
            sa.String(),
            nullable=True,
            comment="Type of device used for authentication (mobile, desktop, etc.)",
        ),
        sa.Column(
            "device_name",
            sa.String(),
            nullable=True,
            comment="Name of the device if provided",
        ),
        sa.Column(
            "browser",
            sa.String(),
            nullable=True,
            comment="Browser information from user agent",
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            nullable=False,
            comment="Whether this session is currently active",
        ),
        sa.Column(
            "last_activity",
            sa.DateTime(),
            nullable=False,
            comment="Timestamp of last activity in this session",
        ),
        sa.Column(
            "expires_at",
            sa.DateTime(),
            nullable=False,
            comment="When this session expires",
        ),
        sa.Column(
            "revoked",
            sa.Boolean(),
            nullable=False,
            comment="Whether this session has been explicitly revoked",
        ),
        sa.Column(
            "trust_score",
            sa.Integer(),
            nullable=False,
            comment="Trust level of this session (0-100)",
        ),
        sa.Column(
            "requires_verification",
            sa.Boolean(),
            nullable=False,
            comment="Whether additional verification is required",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Session table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "extensions",
        sa.Column("name", sa.String(), nullable=False, comment="The name"),
        sa.Column(
            "description",
            sa.String(),
            nullable=True,
            comment="Description of the extension",
        ),
        sa.Column(
            "friendly_name",
            sa.String(),
            nullable=True,
            comment="Human-readable name for the extension",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Extension table",
        info={"source_module": "logic.BLL_Extensions"},
    )
    op.create_table(
        "failed_login_attempts",
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column(
            "ip_address",
            sa.String(),
            nullable=True,
            comment="IP address of failed login attempt",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="FailedLoginAttempt table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "invitees",
        sa.Column(
            "invitation_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Invitation (table not found)",
        ),
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column("email", sa.String(), nullable=False, comment="Email of the invitee"),
        sa.Column(
            "declined_at",
            sa.DateTime(),
            nullable=True,
            comment="When the invitation was declined",
        ),
        sa.Column(
            "accepted_at",
            sa.DateTime(),
            nullable=True,
            comment="When the invitation was accepted",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Invitee table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "invitations",
        sa.Column(
            "role_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Role (table not found)",
        ),
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team (table not found)",
        ),
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column("code", sa.String(), nullable=True, comment="Invitation code"),
        sa.Column(
            "max_uses",
            sa.Integer(),
            nullable=True,
            comment="Maximum number of uses allowed",
        ),
        sa.Column(
            "expires_at", sa.DateTime(), nullable=True, comment="Expiration date/time"
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Invitation table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "permissions",
        sa.Column(
            "role_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Role (table not found)",
        ),
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team (table not found)",
        ),
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column(
            "resource_type", sa.String(), nullable=False, comment="Type of resource"
        ),
        sa.Column(
            "resource_id", sa.String(), nullable=False, comment="ID of the resource"
        ),
        sa.Column(
            "can_view",
            sa.Boolean(),
            nullable=False,
            comment="Whether user/team can view the resource",
        ),
        sa.Column(
            "can_execute",
            sa.Boolean(),
            nullable=False,
            comment="Whether user/team can execute the resource",
        ),
        sa.Column(
            "can_copy",
            sa.Boolean(),
            nullable=False,
            comment="Whether user/team can copy the resource",
        ),
        sa.Column(
            "can_edit",
            sa.Boolean(),
            nullable=False,
            comment="Whether user/team can edit the resource",
        ),
        sa.Column(
            "can_delete",
            sa.Boolean(),
            nullable=False,
            comment="Whether user/team can delete the resource",
        ),
        sa.Column(
            "can_share",
            sa.Boolean(),
            nullable=False,
            comment="Whether user/team can share the resource with others",
        ),
        sa.Column(
            "expires_at", sa.DateTime(), nullable=True, comment="Permission expiration"
        ),
        sa.Column(
            "enabled",
            sa.Boolean(),
            nullable=False,
            comment="Whether the permission is enabled",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Permission table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "provider_extension_abilities",
        sa.Column("provider_extension_id", sa.String(), nullable=False),
        sa.Column("ability_id", sa.String(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="ProviderExtensionAbility table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "provider_extensions",
        sa.Column("provider_id", sa.String(), nullable=False),
        sa.Column("extension_id", sa.String(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="ProviderExtension table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "provider_instance_extension_abilities",
        sa.Column("provider_instance_id", sa.String(), nullable=False),
        sa.Column("provider_extension_ability_id", sa.String(), nullable=False),
        sa.Column("state", sa.Boolean(), nullable=False),
        sa.Column("forced", sa.Boolean(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="ProviderInstanceExtensionAbility table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "provider_instance_settings",
        sa.Column("provider_instance_id", sa.String(), nullable=False),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="ProviderInstanceSetting table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "provider_instance_usages",
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team (table not found)",
        ),
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column("provider_instance_id", sa.String(), nullable=False),
        sa.Column(
            "key",
            sa.String(),
            nullable=True,
            comment="Optional key to differentiate between usage records (for example AI model input and output tokens).",
        ),
        sa.Column(
            "value",
            sa.Integer(),
            nullable=True,
            comment="Optional key to differentiate between usage records (for example AI model input and output tokens).",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="ProviderInstanceUsage table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "provider_instances",
        sa.Column(
            "provider_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Provider (table not found)",
        ),
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team (table not found)",
        ),
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column("name", sa.String(), nullable=False, comment="The name"),
        sa.Column("model_name", sa.String(), nullable=True),
        sa.Column("api_key", sa.String(), nullable=True),
        sa.Column(
            "enabled", sa.Boolean(), nullable=True, comment="Whether it is enabled"
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="ProviderInstance table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "providers",
        sa.Column("name", sa.String(), nullable=False, comment="The name"),
        sa.Column("friendly_name", sa.String(), nullable=True),
        sa.Column("agent_settings_json", sa.String(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Provider table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "rate_limit_policies",
        sa.Column("name", sa.String(), nullable=False, comment="The name"),
        sa.Column(
            "resource_pattern",
            sa.String(),
            nullable=False,
            comment="Resource pattern to match",
        ),
        sa.Column(
            "window_seconds",
            sa.Integer(),
            nullable=False,
            comment="Time window in seconds",
        ),
        sa.Column(
            "max_requests",
            sa.Integer(),
            nullable=False,
            comment="Maximum requests in time window",
        ),
        sa.Column(
            "scope",
            sa.String(),
            nullable=False,
            comment="Scope of rate limiting (user, ip, global)",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="RateLimitPolicy table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "roles",
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team (table not found)",
        ),
        sa.Column("name", sa.String(), nullable=False, comment="The name"),
        sa.Column(
            "friendly_name",
            sa.String(),
            nullable=True,
            comment="Human-readable role name",
        ),
        sa.Column(
            "mfa_count",
            sa.Integer(),
            nullable=False,
            comment="Number of MFA verifications required",
        ),
        sa.Column(
            "password_change_frequency_days",
            sa.Integer(),
            nullable=False,
            comment="How often password must be changed",
        ),
        sa.Column(
            "expires_at", sa.DateTime(), nullable=True, comment="Role expiration date"
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column(
            "parent_id", sa.String(), nullable=True, comment="ID of the parent record"
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Role table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "rotation_provider_instances",
        sa.Column("rotation_id", sa.String(), nullable=False),
        sa.Column("provider_instance_id", sa.String(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.Column(
            "parent_id", sa.String(), nullable=True, comment="ID of the parent record"
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["rotation_provider_instances.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="RotationProviderInstance table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "rotations",
        sa.Column(
            "extension_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Extension (table not found)",
        ),
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team (table not found)",
        ),
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column("name", sa.String(), nullable=False, comment="The name"),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Rotation table",
        info={"source_module": "logic.BLL_Providers"},
    )
    op.create_table(
        "metadata",
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User",
        ),
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team",
        ),
        sa.Column("key", sa.String(), nullable=False, comment="Metadata key"),
        sa.Column("value", sa.String(), nullable=True, comment="Metadata value"),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="Unified metadata table for users and teams",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "teams",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "description", sa.String(), nullable=True, comment="Team description"
        ),
        sa.Column(
            "encryption_key",
            sa.String(),
            nullable=True,
            comment="Encryption key for team data",
        ),
        sa.Column("token", sa.String(), nullable=True, comment="Team token"),
        sa.Column(
            "training_data",
            sa.String(),
            nullable=True,
            comment="Training data for team",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.Column(
            "parent_id", sa.String(), nullable=True, comment="ID of the parent record"
        ),
        sa.Column("image_url", sa.String(), nullable=True, comment="URL of the image"),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Team table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "user_credentials",
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User (table not found)",
        ),
        sa.Column(
            "password_hash", sa.String(), nullable=True, comment="Hashed password"
        ),
        sa.Column(
            "password_salt",
            sa.String(),
            nullable=True,
            comment="Salt used for hashing the password",
        ),
        sa.Column(
            "password_changed_at",
            sa.DateTime(),
            nullable=True,
            comment="When password was changed; null indicates current password",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="UserCredential table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(), nullable=True, comment="User's email address"),
        sa.Column("username", sa.String(), nullable=True, comment="User's username"),
        sa.Column(
            "display_name", sa.String(), nullable=True, comment="User's display name"
        ),
        sa.Column(
            "first_name", sa.String(), nullable=True, comment="User's first name"
        ),
        sa.Column("last_name", sa.String(), nullable=True, comment="User's last name"),
        sa.Column(
            "mfa_count",
            sa.Integer(),
            nullable=True,
            comment="Number of MFA verifications required",
        ),
        sa.Column(
            "active", sa.Boolean(), nullable=True, comment="Whether the user is active"
        ),
        sa.Column("timezone", sa.String(), nullable=True, comment="User's timezone"),
        sa.Column("language", sa.String(), nullable=True, comment="User's language"),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True, comment="URL of the image"),
        sa.PrimaryKeyConstraint("id"),
        comment="User table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "user_recovery_questions",
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User",
        ),
        sa.Column("question", sa.String(), nullable=False, comment="Recovery question"),
        sa.Column(
            "answer",
            sa.String(),
            nullable=False,
            comment="Hashed answer to recovery question",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="UserRecoveryQuestion table",
        info={"source_module": "logic.BLL_Auth"},
    )
    op.create_table(
        "user_teams",
        sa.Column(
            "role_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Role",
        ),
        sa.Column(
            "team_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to Team",
        ),
        sa.Column(
            "user_id",
            sa.String(),
            nullable=True,
            comment="Optional foreign key to User",
        ),
        sa.Column(
            "enabled",
            sa.Boolean(),
            nullable=False,
            comment="Whether this membership is enabled",
        ),
        sa.Column(
            "expires_at",
            sa.DateTime(),
            nullable=True,
            comment="When this membership expires",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_user_id", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by_user_id", sa.String(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by_user_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="UserTeam table",
        info={"source_module": "logic.BLL_Auth"},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_teams")
    op.drop_table("user_recovery_questions")
    op.drop_table("users")
    op.drop_table("metadata")
    op.drop_table("user_credentials")
    op.drop_table("teams")
    op.drop_table("rotations")
    op.drop_table("rotation_provider_instances")
    op.drop_table("roles")
    op.drop_table("rate_limit_policies")
    op.drop_table("providers")
    op.drop_table("provider_instances")
    op.drop_table("provider_instance_usages")
    op.drop_table("provider_instance_settings")
    op.drop_table("provider_instance_extension_abilities")
    op.drop_table("provider_extensions")
    op.drop_table("provider_extension_abilities")
    op.drop_table("permissions")
    op.drop_table("invitations")
    op.drop_table("Invitees")
    op.drop_table("failed_login_attempts")
    op.drop_table("extensions")
    op.drop_table("sessions")
    op.drop_table("abilities")
    # ### end Alembic commands ###
